version: "3"
services:
  # React
  react-auth:
    container_name: react-auth
    build:
      context: ./front
      dockerfile: DockerFile
    tty: true
    command: sh -c "cd react-auth && yarn start"
    volumes:
      - ./front/:/usr/src/app
      - /usr/src/app/react-auth/node_modules
    ports:
      - 3000:3000
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks: 
      - auth-network
    links: 
      - go-auth

  # Golang
  go-auth:
    container_name: go-auth
    build:
      context: ./go-auth
      dockerfile: DockerFile
    depends_on:
      - db
    tty: true
    volumes:
      - ./go-auth:/go-auth
    ports:
      - 8000:8000
    environment:
      MYSQL_DATABASE: yt_go_auth
      MYSQL_HOST: dockerMySQL
      MYSQL_USER: root
      MYSQL_PASSWORD: rootroot
    networks: 
      - auth-network

  # MySQL
  db:
    container_name: dockerMySQL
    build:
      context: ./mysql/
      dockerfile: DockerFile
    environment:
      MYSQL_ROOT_PASSWORD: rootroot
      MYSQL_DATABASE: yt_go_auth
      MYSQL_USER: root
      MYSQL_PASSWORD: rootroot
      TZ: "Asia/Tokyo"
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - db-data:/var/lib/mysql
      - ./mysql/conf.d/my.conf:/etc/mysql/my.conf
    ports:
      - 3306:3306
    networks: 
      - auth-network
volumes:
  db-data:
    driver: local
networks: 
  auth-network:
    external: true
